// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.opensource.svga.video.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class FrameEntity;
@class Layout;
@class MovieParams;
@class ShapeEntity;
@class ShapeEntity_EllipseArgs;
@class ShapeEntity_RectArgs;
@class ShapeEntity_ShapeArgs;
@class ShapeEntity_ShapeStyle;
@class ShapeEntity_ShapeStyle_RGBAColor;
@class SpriteEntity;
@class Transform;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ShapeEntity_ShapeType

typedef GPB_ENUM(ShapeEntity_ShapeType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ShapeEntity_ShapeType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 路径 */
  ShapeEntity_ShapeType_Shape = 0,

  /** 矩形 */
  ShapeEntity_ShapeType_Rect = 1,

  /** 圆形 */
  ShapeEntity_ShapeType_Ellipse = 2,

  /** 与前帧一致 */
  ShapeEntity_ShapeType_Keep = 3,
};

GPBEnumDescriptor *ShapeEntity_ShapeType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ShapeEntity_ShapeType_IsValidValue(int32_t value);

#pragma mark - Enum ShapeEntity_ShapeStyle_LineCap

typedef GPB_ENUM(ShapeEntity_ShapeStyle_LineCap) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ShapeEntity_ShapeStyle_LineCap_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ShapeEntity_ShapeStyle_LineCap_LineCapButt = 0,
  ShapeEntity_ShapeStyle_LineCap_LineCapRound = 1,
  ShapeEntity_ShapeStyle_LineCap_LineCapSquare = 2,
};

GPBEnumDescriptor *ShapeEntity_ShapeStyle_LineCap_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ShapeEntity_ShapeStyle_LineCap_IsValidValue(int32_t value);

#pragma mark - Enum ShapeEntity_ShapeStyle_LineJoin

typedef GPB_ENUM(ShapeEntity_ShapeStyle_LineJoin) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ShapeEntity_ShapeStyle_LineJoin_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ShapeEntity_ShapeStyle_LineJoin_LineJoinMiter = 0,
  ShapeEntity_ShapeStyle_LineJoin_LineJoinRound = 1,
  ShapeEntity_ShapeStyle_LineJoin_LineJoinBevel = 2,
};

GPBEnumDescriptor *ShapeEntity_ShapeStyle_LineJoin_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ShapeEntity_ShapeStyle_LineJoin_IsValidValue(int32_t value);

#pragma mark - ComOpensourceSvgaVideoRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ComOpensourceSvgaVideoRoot : GPBRootObject
@end

#pragma mark - MovieParams

typedef GPB_ENUM(MovieParams_FieldNumber) {
  MovieParams_FieldNumber_ViewBoxWidth = 1,
  MovieParams_FieldNumber_ViewBoxHeight = 2,
  MovieParams_FieldNumber_Fps = 3,
  MovieParams_FieldNumber_Frames = 4,
};

@interface MovieParams : GPBMessage

/** 画布宽 */
@property(nonatomic, readwrite) float viewBoxWidth;

/** 画布高 */
@property(nonatomic, readwrite) float viewBoxHeight;

/** 动画每秒播放帧数，合法值是 [1, 2, 3, 5, 6, 10, 12, 15, 20, 30, 60] 中的任意一个。 */
@property(nonatomic, readwrite) int32_t fps;

/** 动画总帧数 */
@property(nonatomic, readwrite) int32_t frames;

@end

#pragma mark - SpriteEntity

typedef GPB_ENUM(SpriteEntity_FieldNumber) {
  SpriteEntity_FieldNumber_ImageKey = 1,
  SpriteEntity_FieldNumber_FramesArray = 2,
};

@interface SpriteEntity : GPBMessage

/** 元件所对应的位图键名, 如果 imageKey 含有 .vector 后缀，该 sprite 为矢量图层。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *imageKey;

/** 帧列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<FrameEntity*> *framesArray;
/** The number of items in @c framesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger framesArray_Count;

@end

#pragma mark - Layout

typedef GPB_ENUM(Layout_FieldNumber) {
  Layout_FieldNumber_X = 1,
  Layout_FieldNumber_Y = 2,
  Layout_FieldNumber_Width = 3,
  Layout_FieldNumber_Height = 4,
};

@interface Layout : GPBMessage

@property(nonatomic, readwrite) float x;

@property(nonatomic, readwrite) float y;

@property(nonatomic, readwrite) float width;

@property(nonatomic, readwrite) float height;

@end

#pragma mark - Transform

typedef GPB_ENUM(Transform_FieldNumber) {
  Transform_FieldNumber_A = 1,
  Transform_FieldNumber_B = 2,
  Transform_FieldNumber_C = 3,
  Transform_FieldNumber_D = 4,
  Transform_FieldNumber_Tx = 5,
  Transform_FieldNumber_Ty = 6,
};

@interface Transform : GPBMessage

@property(nonatomic, readwrite) float a;

@property(nonatomic, readwrite) float b;

@property(nonatomic, readwrite) float c;

@property(nonatomic, readwrite) float d;

@property(nonatomic, readwrite) float tx;

@property(nonatomic, readwrite) float ty;

@end

#pragma mark - ShapeEntity

typedef GPB_ENUM(ShapeEntity_FieldNumber) {
  ShapeEntity_FieldNumber_Type = 1,
  ShapeEntity_FieldNumber_Shape = 2,
  ShapeEntity_FieldNumber_Rect = 3,
  ShapeEntity_FieldNumber_Ellipse = 4,
  ShapeEntity_FieldNumber_Styles = 10,
  ShapeEntity_FieldNumber_Transform = 11,
};

typedef GPB_ENUM(ShapeEntity_Args_OneOfCase) {
  ShapeEntity_Args_OneOfCase_GPBUnsetOneOfCase = 0,
  ShapeEntity_Args_OneOfCase_Shape = 2,
  ShapeEntity_Args_OneOfCase_Rect = 3,
  ShapeEntity_Args_OneOfCase_Ellipse = 4,
};

@interface ShapeEntity : GPBMessage

/** 矢量类型 */
@property(nonatomic, readwrite) ShapeEntity_ShapeType type;

@property(nonatomic, readonly) ShapeEntity_Args_OneOfCase argsOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) ShapeEntity_ShapeArgs *shape;

@property(nonatomic, readwrite, strong, null_resettable) ShapeEntity_RectArgs *rect;

@property(nonatomic, readwrite, strong, null_resettable) ShapeEntity_EllipseArgs *ellipse;

/** 渲染参数 */
@property(nonatomic, readwrite, strong, null_resettable) ShapeEntity_ShapeStyle *styles;
/** Test to see if @c styles has been set. */
@property(nonatomic, readwrite) BOOL hasStyles;

/** 矢量图层 2D 变换矩阵 */
@property(nonatomic, readwrite, strong, null_resettable) Transform *transform;
/** Test to see if @c transform has been set. */
@property(nonatomic, readwrite) BOOL hasTransform;

@end

/**
 * Fetches the raw value of a @c ShapeEntity's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ShapeEntity_Type_RawValue(ShapeEntity *message);
/**
 * Sets the raw value of an @c ShapeEntity's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetShapeEntity_Type_RawValue(ShapeEntity *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'args'.
 **/
void ShapeEntity_ClearArgsOneOfCase(ShapeEntity *message);

#pragma mark - ShapeEntity_ShapeArgs

typedef GPB_ENUM(ShapeEntity_ShapeArgs_FieldNumber) {
  ShapeEntity_ShapeArgs_FieldNumber_D = 1,
};

@interface ShapeEntity_ShapeArgs : GPBMessage

/** SVG 路径 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *d;

@end

#pragma mark - ShapeEntity_RectArgs

typedef GPB_ENUM(ShapeEntity_RectArgs_FieldNumber) {
  ShapeEntity_RectArgs_FieldNumber_X = 1,
  ShapeEntity_RectArgs_FieldNumber_Y = 2,
  ShapeEntity_RectArgs_FieldNumber_Width = 3,
  ShapeEntity_RectArgs_FieldNumber_Height = 4,
  ShapeEntity_RectArgs_FieldNumber_CornerRadius = 5,
};

@interface ShapeEntity_RectArgs : GPBMessage

@property(nonatomic, readwrite) float x;

@property(nonatomic, readwrite) float y;

@property(nonatomic, readwrite) float width;

@property(nonatomic, readwrite) float height;

/** 圆角半径 */
@property(nonatomic, readwrite) float cornerRadius;

@end

#pragma mark - ShapeEntity_EllipseArgs

typedef GPB_ENUM(ShapeEntity_EllipseArgs_FieldNumber) {
  ShapeEntity_EllipseArgs_FieldNumber_X = 1,
  ShapeEntity_EllipseArgs_FieldNumber_Y = 2,
  ShapeEntity_EllipseArgs_FieldNumber_RadiusX = 3,
  ShapeEntity_EllipseArgs_FieldNumber_RadiusY = 4,
};

@interface ShapeEntity_EllipseArgs : GPBMessage

/** 圆中心点 X */
@property(nonatomic, readwrite) float x;

/** 圆中心点 Y */
@property(nonatomic, readwrite) float y;

/** 横向半径 */
@property(nonatomic, readwrite) float radiusX;

/** 纵向半径 */
@property(nonatomic, readwrite) float radiusY;

@end

#pragma mark - ShapeEntity_ShapeStyle

typedef GPB_ENUM(ShapeEntity_ShapeStyle_FieldNumber) {
  ShapeEntity_ShapeStyle_FieldNumber_Fill = 1,
  ShapeEntity_ShapeStyle_FieldNumber_Stroke = 2,
  ShapeEntity_ShapeStyle_FieldNumber_StrokeWidth = 3,
  ShapeEntity_ShapeStyle_FieldNumber_LineCap = 4,
  ShapeEntity_ShapeStyle_FieldNumber_LineJoin = 5,
  ShapeEntity_ShapeStyle_FieldNumber_MiterLimit = 6,
  ShapeEntity_ShapeStyle_FieldNumber_LineDashI = 7,
  ShapeEntity_ShapeStyle_FieldNumber_LineDashIi = 8,
  ShapeEntity_ShapeStyle_FieldNumber_LineDashIii = 9,
};

@interface ShapeEntity_ShapeStyle : GPBMessage

/** 填充色 */
@property(nonatomic, readwrite, strong, null_resettable) ShapeEntity_ShapeStyle_RGBAColor *fill;
/** Test to see if @c fill has been set. */
@property(nonatomic, readwrite) BOOL hasFill;

/** 描边色 */
@property(nonatomic, readwrite, strong, null_resettable) ShapeEntity_ShapeStyle_RGBAColor *stroke;
/** Test to see if @c stroke has been set. */
@property(nonatomic, readwrite) BOOL hasStroke;

/** 描边宽 */
@property(nonatomic, readwrite) float strokeWidth;

/** 线段端点样式 */
@property(nonatomic, readwrite) ShapeEntity_ShapeStyle_LineCap lineCap;

/** 线段连接样式 */
@property(nonatomic, readwrite) ShapeEntity_ShapeStyle_LineJoin lineJoin;

/** 尖角限制 */
@property(nonatomic, readwrite) float miterLimit;

/** 虚线参数 Dash */
@property(nonatomic, readwrite) float lineDashI;

/** 虚线参数 Gap */
@property(nonatomic, readwrite) float lineDashIi;

/** 虚线参数 Offset */
@property(nonatomic, readwrite) float lineDashIii;

@end

/**
 * Fetches the raw value of a @c ShapeEntity_ShapeStyle's @c lineCap property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ShapeEntity_ShapeStyle_LineCap_RawValue(ShapeEntity_ShapeStyle *message);
/**
 * Sets the raw value of an @c ShapeEntity_ShapeStyle's @c lineCap property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetShapeEntity_ShapeStyle_LineCap_RawValue(ShapeEntity_ShapeStyle *message, int32_t value);

/**
 * Fetches the raw value of a @c ShapeEntity_ShapeStyle's @c lineJoin property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ShapeEntity_ShapeStyle_LineJoin_RawValue(ShapeEntity_ShapeStyle *message);
/**
 * Sets the raw value of an @c ShapeEntity_ShapeStyle's @c lineJoin property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetShapeEntity_ShapeStyle_LineJoin_RawValue(ShapeEntity_ShapeStyle *message, int32_t value);

#pragma mark - ShapeEntity_ShapeStyle_RGBAColor

typedef GPB_ENUM(ShapeEntity_ShapeStyle_RGBAColor_FieldNumber) {
  ShapeEntity_ShapeStyle_RGBAColor_FieldNumber_R = 1,
  ShapeEntity_ShapeStyle_RGBAColor_FieldNumber_G = 2,
  ShapeEntity_ShapeStyle_RGBAColor_FieldNumber_B = 3,
  ShapeEntity_ShapeStyle_RGBAColor_FieldNumber_A = 4,
};

@interface ShapeEntity_ShapeStyle_RGBAColor : GPBMessage

@property(nonatomic, readwrite) float r;

@property(nonatomic, readwrite) float g;

@property(nonatomic, readwrite) float b;

@property(nonatomic, readwrite) float a;

@end

#pragma mark - FrameEntity

typedef GPB_ENUM(FrameEntity_FieldNumber) {
  FrameEntity_FieldNumber_Alpha = 1,
  FrameEntity_FieldNumber_Layout = 2,
  FrameEntity_FieldNumber_Transform = 3,
  FrameEntity_FieldNumber_ClipPath = 4,
  FrameEntity_FieldNumber_ShapesArray = 5,
};

@interface FrameEntity : GPBMessage

/** 透明度 */
@property(nonatomic, readwrite) float alpha;

/** 初始约束大小 */
@property(nonatomic, readwrite, strong, null_resettable) Layout *layout;
/** Test to see if @c layout has been set. */
@property(nonatomic, readwrite) BOOL hasLayout;

/** 2D 变换矩阵 */
@property(nonatomic, readwrite, strong, null_resettable) Transform *transform;
/** Test to see if @c transform has been set. */
@property(nonatomic, readwrite) BOOL hasTransform;

/** 遮罩路径，使用 SVG 标准 Path 绘制图案进行 Mask 遮罩。 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clipPath;

/** 矢量元素列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ShapeEntity*> *shapesArray;
/** The number of items in @c shapesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger shapesArray_Count;

@end

#pragma mark - MovieEntity

typedef GPB_ENUM(MovieEntity_FieldNumber) {
  MovieEntity_FieldNumber_Version = 1,
  MovieEntity_FieldNumber_Params = 2,
  MovieEntity_FieldNumber_Images = 3,
  MovieEntity_FieldNumber_SpritesArray = 4,
};

@interface MovieEntity : GPBMessage

/** SVGA 格式版本号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

/** 动画参数 */
@property(nonatomic, readwrite, strong, null_resettable) MovieParams *params;
/** Test to see if @c params has been set. */
@property(nonatomic, readwrite) BOOL hasParams;

/** Key 是位图键名，Value 是位图文件名或 Base64 数据。 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *images;
/** The number of items in @c images without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger images_Count;

/** 元素列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SpriteEntity*> *spritesArray;
/** The number of items in @c spritesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger spritesArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
